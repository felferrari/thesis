general_params:
  train_year: 2020 
  test_year: 2021
  patch_size: &patch_size 224 
  prefixs: &prefixs
    opt: opt
    sar: sar
    previous: previous
    label: label
    prediction: pred
    cloud: cloud
  #experiments_cfg_path: &experiments_cfg_path experiments
  experiments_folders: &experiment_folders
    models: models
    logs: logs
    predicted: predicted
    visual: visual
    results: results
    visual_logs: visual_logs
  opt_bands: &opt_bands 10 #number of bands per optical image
  sar_bands: &sar_bands 2 #number of bands per SAR image
  n_classes: &n_classes 4 #number of classes
  n_models: &n_models 10 #number of models to be trained for each experiment
  min_area: 625 #!CHANGE 625
  resunet_depths: &resunet_depths [32, 64, 128, 256]
  label_def_inner_buffer: 3
  label_def_outer_buffer: 3
  swin_params: &swin_params
    img_size: *patch_size
    base_dim: 96
    window_size: [4, 4]
    shift_size: [2, 2]
    patch_size: [4, 4]
    n_heads: [3, 6, 12, 24]
    n_blocks: [2, 2, 2, 2]
preparation_params:
  train_folder: train
  validation_folder: validation
  test_folder: test
  prepared_data: prepared.yaml
  statistics_data: statistics.yaml
  patch_overlap: 0.7
  min_def_proportion: 0.02 #!CHANGE
paths:
  opt_data: D:\Ferrari\Projects\thesis\site_1\data\opt
  sar_data: D:\Ferrari\Projects\thesis\site_1\data\sar
  prodes_data: D:\Ferrari\Projects\thesis\prodes
  tiles_path: D:\Ferrari\Projects\thesis\site_1\data\general\tiles.tif
  experiments: D:\Ferrari\Projects\thesis\site_1\experiments
  label_train: D:\Ferrari\Projects\thesis\site_1\data\general\label_train.tif
  label_test: D:\Ferrari\Projects\thesis\site_1\data\general\label_test.tif
  previous_train: D:\Ferrari\Projects\thesis\site_1\data\general\previous_train.tif
  previous_test: D:\Ferrari\Projects\thesis\site_1\data\general\previous_test.tif
  prepared_data: C:\Users\felferrari\Documents\projetos\thesis\prepared
  results_sqlite: D:\Ferrari\Projects\thesis\site_1\experiments\results.db
prodes_params:
  previous_def: accumulated_deforestation_2007.shp #!CHANGE
  hydrography: hydrography.shp
  no_forest: no_forest.shp
  residual: residual.shp
  yearly_deforestation: yearly_deforestation.shp
  cloud: cloud.shp
# preparation_params:
#   train_folder: train
#   validation_folder: validation
#   test_folder: test
#   prepared_data: prepared.yaml
#   statistics_data: statistics.yaml
#   patch_size: *patch_size
#   opt_bands: *opt_bands 
#   sar_bands: *sar_bands 
#   patch_overlap: 0.7
#   min_def_proportion: 0.02
#   prefixs: *prefixs
training_params:
  n_models: *n_models
  #experiments_cfg_path: *experiments_cfg_path
  experiment_folders: *experiment_folders
  patch_size: *patch_size
  batch_size: 32
  opt_bands: *opt_bands 
  sar_bands: *sar_bands 
  max_train_batches: 200
  max_val_batches: 100
  min_val_loss: 200
  loss_fn: 
    #module: torch.nn.CrossEntropyLoss
    module: segmentation_models_pytorch.losses.FocalLoss
    params:
      mode: multiclass
      ignore_index: 3
      gamma: 3 #!CHANGE 3
      #weight: [0.1, 0.9, 0]
  optimizer:
    module: torch.optim.AdamW
    #module: torch.optim.Adam
    params:
      lr: 2.0e-5
  early_stop:
    patience: 10
    min_delta: 1.0e-5
  max_epochs: 500
  n_classes: *n_classes
prediction_params:
  experiment_folders: *experiment_folders
  patch_size: *patch_size
  n_classes: *n_classes
  prefixs: *prefixs
  n_models: *n_models
  batch_size: 48
  prediction_remove_border: 8
  prediction_overlaps: [0.3]#, 0.3, 0.4]
  opt_bands: *opt_bands 
  sar_bands: *sar_bands 

experiments:
  exp_X:
    model: models.resunet.networks.ResUnetOpt # 
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths


  exp_1:
    model: models.resunet.networks.ResUnetOpt # 
    description: CNN Optical (Diverse cloud)
    sumary: Model Trained and tested with cloud-free optical images
    short: CNN-OPT (Diverse)
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 11] ]
    resunet_depths: *resunet_depths

  exp_2:
    model: models.resunet.networks.ResUnetSAR # 
    description: CNN SAR (12 Average images)
    sumary: Model Trained and tested with 12 average SAR images
    short: CNN-SAR
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths

  exp_3:
    model: models.resunet.networks.ResUnetEF # 
    description: CNN Pixel-level fusion (Diverse cloud and 12 average SAR images)
    sumary: Model Trained and tested with diverse cloud conditions in the optical images
    short: CNN-PIX (Diverse)
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths

  exp_4:
    model: models.resunet.networks.ResUnetJF # 
    description: CNN Feature-level fusion (Diverse cloud and 12 average SAR images)
    sumary: Model Trained and tested with diverse cloud conditions in the optical images
    short: CNN-FEA (Diverse)
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths

  exp_5:
    model: models.resunet.networks.ResUnetLF # 
    description: CNN Decision-level fusion (Diverse cloud and 12 average SAR images)
    sumary: Model Trained and tested with diverse cloud conditions in the optical images
    short: CNN-DEC (Diverse)
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths

  exp_6:
    model: models.resunet.networks.ResUnetOpt # 
    description: CNN Optical (Cloud-free)
    sumary: Model Trained and tested with cloud-free optical images
    short: CNN-OPT (Cloud-free)
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 11] ]
    resunet_depths: *resunet_depths

  exp_7:
    model: models.resunet.networks.ResUnetJF # 
    description: CNN pretrained Feature-level fusion (Diverse cloud and 12 average SAR images)
    sumary: Model Trained and tested with diverse cloud conditions in the optical images
    short: CNN-FEA (Diverse) (pre-trained)
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    pretrained_encoders:
      opt_exp: 1
      sar_exp: 2
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths

  exp_8:
    model: models.resunet.networks.ResUnetLF # 
    description: CNN pretrained Decision-level fusion (Diverse cloud and 12 average SAR images)
    sumary: Model Trained and tested with diverse cloud conditions in the optical images
    short: CNN-DEC (Diverse) (pre-trained)
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    pretrained_encoders_decoders:
      opt_exp: 1
      sar_exp: 2
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths

  exp_9:
    model: models.resunet.networks.ResUnetEF # 
    description: CNN Pixel-level fusion (Cloud-free and 12 average SAR images)
    sumary: Model Trained and tested with Cloud-free in the optical images
    short: CNN-PIX (Cloud-free)
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths

  exp_10:
    model: models.resunet.networks.ResUnetJF # 
    description: CNN Feature-level fusion (Cloud-free and 12 average SAR images)
    sumary: Model Trained and tested with Cloud-free conditions in the optical images
    short: CNN-FEA (Cloud-free)
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths

  exp_11:
    model: models.resunet.networks.ResUnetLF # 
    description: CNN Decision-level fusion (Cloud-free and 12 average SAR images)
    sumary: Model Trained and tested with Cloud-free conditions in the optical images
    short: CNN-DEC (Cloud-free)
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths

  exp_12:
    model: models.resunet2.networks.ResUnetOpt # 
    description: CNN Opt [No Prev Def] (Cloud-free)
    sumary: Model Trained and tested with cloud-free optical images without previous deforestation info
    short: CNN-OPT [No Prev Def] (Cloud-free)
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 11] ]
    resunet_depths: *resunet_depths

  exp_13:
    model: models.resunet2.networks.ResUnetSAR # 
    description: CNN SAR [No Prev Def] (12 Average images)
    sumary: Model Trained and tested with 12 average SAR images without previous deforestation info
    short: CNN-SAR [No Prev Def]
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths

  exp_14:
    model: models.resunet_siamese.networks.SiameseOpt # 
    description: CNN Siamese Diff Opt [No Prev Def] (Cloud-free)
    sumary: Model Trained and tested with cloud-free optical images without previous deforestation info
    short: CNN-OPT [Siamese-diff] [No Prev Def] (Cloud-free)
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 11] ]
    resunet_depths: *resunet_depths
    siamese_op: difference

  exp_15:
    model: models.resunet_siamese.networks.SiameseOpt # 
    description: CNN Siamese Conc Opt [No Prev Def] (Cloud-free)
    sumary: Model Trained and tested with cloud-free optical images without previous deforestation info
    short: CNN-OPT [Siamese-conc] [No Prev Def] (Cloud-free)
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 11] ]
    resunet_depths: *resunet_depths
    siamese_op: concatenation

  exp_16:
    model: models.resunet_siamese.networks.SiameseSAR # 
    description: CNN Siamese Diff SAR [No Prev Def] 
    sumary: Model Trained and tested with pair of SAR images
    short: CNN-SAR [Siamese-diff] [No Prev Def] 
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 11] ]
    resunet_depths: *resunet_depths
    siamese_op: difference

  exp_17:
    model: models.resunet_siamese.networks.SiameseSAR # 
    description: CNN Siamese Conc SAR [No Prev Def] 
    sumary: Model Trained and tested with pair of SAR images
    short: CNN-SAR [Siamese-conc] [No Prev Def] 
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 11] ]
    resunet_depths: *resunet_depths
    siamese_op: concatenation

  exp_18:
    model: models.resunet_siamese.networks.SiameseOptPrevDef # 
    description: CNN Siamese Diff Optical (Cloud-free)
    sumary: Model Trained and tested with cloud-free optical images without previous deforestation info
    short: CNN-OPT [Siamese-diff] (Cloud-free)
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 11] ]
    resunet_depths: *resunet_depths
    siamese_op: difference

  exp_19:
    model: models.resunet_siamese.networks.SiameseOptPrevDef # 
    description: CNN Siamese Concat Optical (Cloud-free)
    sumary: Model Trained and tested with cloud-free optical images without previous deforestation info
    short: CNN-OPT [Siamese-conc] (Cloud-free)
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 11] ]
    resunet_depths: *resunet_depths
    siamese_op: concatenation

  exp_20:
    model: models.resunet_siamese.networks.SiameseSARPrevDef # 
    description: CNN Siamese Diff SAR 
    sumary: Model Trained and tested with pair of SAR images
    short: CNN-SAR [Siamese-diff]
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 11] ]
    resunet_depths: *resunet_depths
    siamese_op: difference

  exp_21:
    model: models.resunet_siamese.networks.SiameseSARPrevDef # 
    description: CNN Siamese Conc SAR 
    sumary: Model Trained and tested with pair of SAR images
    short: CNN-SAR [Siamese-conc]
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 11] ]
    resunet_depths: *resunet_depths
    siamese_op: concatenation

  exp_51:
    model: models.swin.networks.SwinUnetOpt # 
    description: SWIN-Unet Optical (Diverse cloud)
    sumary: Model Trained and tested with diverse cloud conditions in the optical images
    short: TRA-OPT (Diverse)
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 11] ]
    swin_params: *swin_params

  exp_52:
    model: models.swin.networks.SwinUnetSAR # 
    description: SWIN-Unet SAR (12 Average images)
    sumary: Model Trained and tested with 12 average SAR images
    short: TRA-SAR
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    swin_params: *swin_params

  exp_53:
    model: models.swin.networks.SwinUnetEF # 
    description: SWIN-Unet Pixel-level fusion (Diverse cloud and 12 average SAR images)
    sumary: Model Trained and tested with diverse cloud conditions in the optical images
    short: TRA-PIX (Diverse)
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    swin_params: *swin_params

  exp_54:
    model: models.swin.networks.SwinUnetJF # 
    description: SWIN-Unet Feature-level fusion (Diverse cloud and 12 average SAR images)
    sumary: Model Trained and tested with diverse cloud conditions in the optical images
    short: TRA-FEA (Diverse)
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    swin_params: *swin_params

  exp_55:
    model: models.swin.networks.SwinUnetLF # 
    description: SWIN-Unet Decision-level fusion (Diverse cloud and 12 average SAR images)
    sumary: Model Trained and tested with diverse cloud conditions in the optical images
    short: TRA-DEC (Diverse)
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    swin_params: *swin_params

  exp_56:
    model: models.swin.networks.SwinUnetOpt # 
    description: SWIN-Unet Optical (Cloud-free)
    sumary: Model Trained and tested with cloud-free optical images
    short: TRA-OPT (Cloud-free)
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 11] ]
    swin_params: *swin_params

  exp_57:
    model: models.swin.networks.SwinUnetJF # 
    description: SWIN-Unet pretrained Feature-level fusion (Diverse cloud and 12 average SAR images)
    sumary: Model Trained and tested with diverse cloud conditions in the optical images
    short: TRA-FEA (Diverse) (pre-trained)
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    pretrained_encoders:
      opt_exp: 51
      sar_exp: 52
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    swin_params: *swin_params

  exp_58:
    model: models.swin.networks.SwinUnetLF # 
    description: SWIN-Unet pretrained Decision-level fusion (Diverse cloud and 12 average SAR images)
    sumary: Model Trained and tested with diverse cloud conditions in the optical images
    short: TRA-DEC (Diverse) (pre-trained)
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    pretrained_encoders_decoders:
      opt_exp: 51
      sar_exp: 52
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    swin_params: *swin_params

  exp_59:
    model: models.swin.networks.SwinUnetEF # 
    description: SWIN-Unet Pixel-level fusion (Cloud-free and 12 average SAR images)
    sumary: Model Trained and tested with Cloud-free conditions in the optical images
    short: TRA-PIX (Cloud-free)
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    swin_params: *swin_params

  exp_60:
    model: models.swin.networks.SwinUnetJF # 
    description: SWIN-Unet Feature-level fusion (Cloud-free and 12 average SAR images)
    sumary: Model Trained and tested with Cloud-free conditions in the optical images
    short: TRA-FEA (Cloud-free)
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    swin_params: *swin_params

  exp_61:
    model: models.swin.networks.SwinUnetLF # 
    description: SWIN-Unet Decision-level fusion (Cloud-free and 12 average SAR images)
    sumary: Model Trained and tested with Cloud-free conditions in the optical images
    short: TRA-DEC (Cloud-free)
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3], [0, 3] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    swin_params: *swin_params

  exp_62:
    model: models.swin2.networks.SwinUnetOpt # 
    description: SWIN-Unet Optical [No Prev Def] (Cloud-free)
    sumary: Model Trained and tested with Cloud-free conditions in the optical images
    short: TRA-OPT [No Prev Def] (Cloud-free)
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 11] ]
    swin_params: *swin_params

  exp_63:
    model: models.swin2.networks.SwinUnetSAR # 
    description: SWIN-Unet SAR [No Prev Def] (12 Average images)
    sumary: Model Trained and tested with 12 average SAR images
    short: TRA-SAR [No Prev Def]
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    swin_params: *swin_params


  exp_64:
    model: models.swin_siamese.networks.SiameseOpt # 
    description: SWIN-Unet Siamese Diff Opt [No Prev Def] (Cloud-free)
    sumary: Model Trained and tested with cloud-free optical images without previous deforestation info
    short: TRA-OPT [Siamese-diff] [No Prev Def] (Cloud-free)
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 11] ]
    swin_params: *swin_params
    siamese_op: difference

  exp_65:
    model: models.swin_siamese.networks.SiameseOpt # 
    description: SWIN-Unet Siamese Concat Opt [No Prev Def] (Cloud-free)
    sumary: Model Trained and tested with cloud-free optical images without previous deforestation info
    short: TRA-OPT [Siamese-conc] [No Prev Def] (Cloud-free)
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 11] ]
    swin_params: *swin_params
    siamese_op: concatenation

  exp_66:
    model: models.swin_siamese.networks.SiameseSAR # 
    description: SWIN-Unet Siamese Diff SAR [No Prev Def] 
    sumary: Model Trained and tested with pair of SAR images
    short: TRA-SAR [Siamese-diff] [No Prev Def] 
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 11] ]
    swin_params: *swin_params
    siamese_op: difference

  exp_67:
    model: models.swin_siamese.networks.SiameseSAR # 
    description: SWIN-Unet Siamese Conc SAR [No Prev Def] 
    sumary: Model Trained and tested with pair of SAR images
    short: TRA-SAR [Siamese-conc] [No Prev Def] 
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 11] ]
    swin_params: *swin_params
    siamese_op: concatenation


  exp_68:
    model: models.swin_siamese.networks.SiameseOptPrevDef # 
    description: SWIN-Unet Siamese Diff Optical (Cloud-free)
    sumary: Model Trained and tested with cloud-free optical images without previous deforestation info
    short: TRA-OPT [Siamese-diff] (Cloud-free)
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 11] ]
    swin_params: *swin_params
    siamese_op: difference

  exp_69:
    model: models.swin_siamese.networks.SiameseOptPrevDef # 
    description: SWIN-Unet Siamese Concat Optical (Cloud-free)
    sumary: Model Trained and tested with cloud-free optical images without previous deforestation info
    short: TRA-OPT [Siamese-conc] (Cloud-free)
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 11] ]
    swin_params: *swin_params
    siamese_op: concatenation

  exp_70:
    model: models.swin_siamese.networks.SiameseSARPrevDef # 
    description: SWIN-Unet Siamese Diff SAR 
    sumary: Model Trained and tested with pair of SAR images
    short: TRA-SAR [Siamese-diff]
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 11] ]
    swin_params: *swin_params
    siamese_op: difference

  exp_71:
    model: models.swin_siamese.networks.SiameseSARPrevDef # 
    description: SWIN-Unet Siamese Conc SAR 
    sumary: Model Trained and tested with pair of SAR images
    short: TRA-SAR [Siamese-conc]
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 11] ]
    swin_params: *swin_params
    siamese_op: concatenation


  exp_101:
    model: models.resunet.networks.ResUnetSAR # 
    description: CNN SAR (2 Average images)
    sumary: Model Trained and tested with 2 average SAR images
    short: SAR (2 average Images)
    group_model: CNN
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 11] ]
    resunet_depths: *resunet_depths

  exp_102:
    model: models.swin.networks.SwinUnetSAR # 
    description: SWIN-Unet SAR (2 Average images)
    sumary: Model Trained and tested with 2 average SAR images
    short: SAR (2 average Images)
    group_model: SWIN-Unet
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 11] ]
    swin_params: *swin_params
