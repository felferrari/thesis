general_params:
  train_year: &train_year 2020
  test_year: &test_year 2021
  patch_size: &patch_size 224
  prefixs: &prefixs
    opt: opt
    sar: sar
    previous: previous
    label: label
    prediction: pred
    cloud: cloud
  #experiments_cfg_path: &experiments_cfg_path experiments
  experiments_folders: &experiment_folders
    models: models
    logs: logs
    predicted: predicted
    visual: visual
    results: results
    visual_logs: visual_logs
  opt_bands: &opt_bands 13 #number of bands per optical image
  sar_bands: &sar_bands 2 #number of bands per SAR image
  n_classes: &n_classes 3 #number of classes
  n_models: &n_models 5 #number of models to be trained for each experiment
  resunet_depths: &resunet_depths [32, 64, 128, 256]
  label_def_inner_buffer: 3
  label_def_outer_buffer: 3
  swin_params: &swin_params
    img_size: *patch_size
    base_dim: 96
    window_size: [4, 4]
    shift_size: [2, 2]
    patch_size: [4, 4]
    n_heads: [3, 6, 12, 24]
    n_blocks: [2, 2, 2, 2]
preparation_params:
  train_folder: train
  validation_folder: validation
  test_folder: test
  prepared_data: prepared.yaml
  statistics_data: statistics.yaml
  patch_overlap: 0.7
  min_def_proportion: 0.02
paths:
  opt_data: /home/felferrari/projects/thesis/data/opt
  sar_data: /home/felferrari/projects/thesis/data/sar
  #avg_sar_data: D:\Ferrari\Projects\thesis\data\sar_avg
  #single_sar_data: D:\Ferrari\Projects\thesis\data\sar_single
  prodes_data: /home/felferrari/projects/thesis/data/prodes
  tiles_path: /home/felferrari/projects/thesis/data/general/tiles.tif
  experiments: /home/felferrari/projects/thesis/experiments
  label_train: /home/felferrari/projects/thesis/data/general/label_train.tif
  label_test: /home/felferrari/projects/thesis/data/general/label_test.tif
  previous_train: /home/felferrari/projects/thesis/data/general/previous_train.tif
  previous_test: /home/felferrari/projects/thesis/data/general/previous_test.tif
  prepared_data: /home/felferrari/projects/thesis/prepared
# original_data:
#   opt:
#     n_bands: *opt_bands 
#     folder: D:\Ferrari\Projects\thesis\data\opt_full_L1C
    # imgs:
    #   train:
    #     - 2019-08-06-2019-08-07.tif # .10 *
    #     - 2019-08-11-2019-08-12.tif # .46
    #     - 2019-08-16-2019-08-17.tif # .6
    #     - 2020-07-31-2020-08-01.tif # .018 *
    #     - 2020-08-05-2020-08-06.tif # .19
    #     - 2020-08-10-2020-08-11.tif #.82
    #   test:
    #     - 2020-07-31-2020-08-01.tif # 0.018 *
    #     - 2020-08-05-2020-08-06.tif # .19
    #     - 2020-08-10-2020-08-11.tif #.82
    #     - 2021-06-26-2021-06-27.tif #.655
    #     - 2021-07-01-2021-07-02.tif # .28
    #     - 2021-07-11-2021-07-12.tif # .009 *
  # sar:
  #   n_bands: *sar_bands 
  #   folder: D:\Ferrari\Projects\thesis\data\sar
  #   imgs:
  #     train: 
  #       - 2019-07-14-2019-08-14.tif
  #       - 2019-08-15-2019-09-15.tif
  #       - 2019-09-16-2019-10-17.tif
  #       - 2019-10-18-2019-11-18.tif
  #       - 2019-11-19-2019-12-20.tif
  #       - 2019-12-21-2020-01-21.tif
  #       - 2020-01-22-2020-02-22.tif
  #       - 2020-02-23-2020-03-25.tif
  #       - 2020-03-26-2020-04-26.tif
  #       - 2020-04-27-2020-05-28.tif
  #       - 2020-05-29-2020-06-29.tif
  #       - 2020-06-30-2020-07-30.tif
  #     test: 
  #       - 2020-06-30-2020-07-30.tif
  #       - 2020-07-31-2020-08-30.tif
  #       - 2020-08-31-2020-09-30.tif
  #       - 2020-10-01-2020-10-31.tif
  #       - 2020-11-01-2020-12-01.tif
  #       - 2020-12-02-2021-01-01.tif
  #       - 2021-01-02-2021-02-01.tif
  #       - 2021-02-02-2021-03-03.tif
  #       - 2021-03-04-2021-04-02.tif
  #       - 2021-04-03-2021-05-02.tif
  #       - 2021-05-03-2021-06-01.tif
  #       - 2021-06-02-2021-07-01.tif
prodes_params:
  defor_2007: accumulated_deforestation_2007.shp
  hydrography: hydrography.shp
  no_forest: no_forest.shp
  residual: residual.shp
  yearly_deforestation: yearly_deforestation.shp
preparation_params:
  train_folder: train
  validation_folder: validation
  test_folder: test
  prepared_data: prepared.yaml
  statistics_data: statistics.yaml
  patch_size: *patch_size
  opt_bands: *opt_bands 
  sar_bands: *sar_bands 
  patch_overlap: 0.7
  min_def_proportion: 0.02
  prefixs: *prefixs
training_params:
  n_models: *n_models
  #experiments_cfg_path: *experiments_cfg_path
  experiment_folders: *experiment_folders
  patch_size: *patch_size
  batch_size: 32
  opt_bands: *opt_bands 
  sar_bands: *sar_bands 
  max_train_batches: 200
  max_val_batches: 100
  min_val_loss: 0.6
  loss_fn: 
    #module: torch.nn.CrossEntropyLoss
    module: segmentation_models_pytorch.losses.FocalLoss
    params:
      mode: multiclass
      #ignore_index: 2
      gamma: 2
      #weight: [0.2, 0.8, 0]
  optimizer:
    module: torch.optim.AdamW
    #module: torch.optim.Adam
    params:
      lr: 2.0e-4
  early_stop:
    patience: 10
    min_delta: 1.0e-5
  max_epochs: 500
  n_classes: *n_classes
prediction_params:
  experiment_folders: *experiment_folders
  patch_size: *patch_size
  n_classes: *n_classes
  prefixs: *prefixs
  n_models: *n_models
  batch_size: 32
  prediction_remove_border: 8
  prediction_overlaps: [0.2]#, 0.3, 0.4]
  opt_bands: *opt_bands 
  sar_bands: *sar_bands 

experiments:
  exp_X:
    model: models.resunet.networks.ResUnetOpt # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths


  exp_1:
    model: models.resunet.networks.ResUnetOpt # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 11] ]
    resunet_depths: *resunet_depths

  exp_2:
    model: models.resunet.networks.ResUnetSAR # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths

  exp_3:
    model: models.resunet.networks.ResUnetEF # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths

  exp_4:
    model: models.resunet.networks.ResUnetJF # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths

  exp_5:
    model: models.resunet.networks.ResUnetLF # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths

  exp_6:
    model: models.resunet.networks.ResUnetOpt # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 11] ]
    resunet_depths: *resunet_depths

  exp_7:
    model: models.resunet.networks.ResUnetSAR # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 11] ]
    resunet_depths: *resunet_depths

  exp_8:
    model: models.resunet.networks.ResUnetSAR # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [12, 40] ]
    test_opt_imgs: [ [3] ]
    test_sar_imgs: [ [12, 40] ]
    resunet_depths: *resunet_depths

  exp_9:
    model: models.resunet.networks.ResUnetSAR # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40] ]
    test_opt_imgs: [ [3] ]
    test_sar_imgs: [ [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40] ]
    resunet_depths: *resunet_depths

  exp_11:
    model: models.swin.networks.SwinUnetOpt # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 11] ]
    swin_params: *swin_params

  exp_12:
    model: models.swin.networks.SwinUnetSAR # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    swin_params: *swin_params

  exp_13:
    model: models.swin.networks.SwinUnetEF # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    swin_params: *swin_params

  exp_14:
    model: models.swin.networks.SwinUnetJF # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    swin_params: *swin_params

  exp_15:
    model: models.swin.networks.SwinUnetLF # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    swin_params: *swin_params

  exp_16:
    model: models.swin.networks.SwinUnetOpt # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 5] ]
    test_sar_imgs: [ [0, 11] ]
    swin_params: *swin_params

  exp_17:
    model: models.swin.networks.SwinUnetSAR # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 11] ]
    swin_params: *swin_params