general_params:
  train_year: &train_year 2020
  test_year: &test_year 2021
  patch_size: &patch_size 224
  prefixs: &prefixs
    opt: opt
    sar: sar
    previous: previous
    label: label
    prediction: pred
    cloud: cloud
  experiments_cfg_path: &experiments_cfg_path experiments
  experiments_paths: &experiments_path
    folder: D:\Ferrari\Projects\thesis\experiments
    models: models
    logs: logs
    predicted: predicted
    visual: visual
    results: results
    visual_logs: visual_logs
  opt_bands: &opt_bands 13 #number of bands per optical image
  sar_bands: &sar_bands 2 #number of bands per SAR image
  #n_opt_images: &n_opt_images 2 #!5 #number of optical images
  #n_sar_images: &n_sar_images 12 #number of optical images
  n_classes: &n_classes 3 #number of classes
  n_models: &n_models 5 #number of models to be trained for each experiment
  resunet_depths: &resunet_depths [32, 64, 128, 256]
  swin_params: &swin_params
    img_size: *patch_size
    base_dim: 96
    window_size: [4, 4]
    shift_size: [2, 2]
    patch_size: [4, 4]
    n_heads: [3, 6, 12, 24]
    n_blocks: [2, 2, 2, 2]
original_data:
  opt:
    n_bands: *opt_bands 
    folder: D:\Ferrari\Projects\thesis\data\opt_full_L1C
    imgs:
      train:
        - 2019-07-16-2019-07-17.tif
        - 2019-08-05-2019-08-06.tif
        - 2019-08-15-2019-08-16.tif
        - 2020-06-30-2020-07-01.tif
        - 2020-07-20-2020-07-21.tif
        - 2020-07-25-2020-07-26.tif
      test:
        - 2020-06-30-2020-07-01.tif
        - 2020-07-20-2020-07-21.tif
        - 2020-07-25-2020-07-26.tif
        - 2021-07-20-2021-07-21.tif
        - 2021-07-30-2021-07-31.tif
        - 2021-08-14-2021-08-15.tif
  sar:
    n_bands: *sar_bands 
    folder: D:\Ferrari\Projects\thesis\data\sar
    imgs:
      train: 
        - 2019-06-24-2019-07-27.tif
        - 2019-07-28-2019-08-30.tif
        - 2019-08-31-2019-10-02.tif
        - 2019-10-03-2019-11-04.tif
        - 2019-11-05-2019-12-07.tif
        - 2019-12-08-2020-01-09.tif
        - 2020-01-10-2020-02-11.tif
        - 2020-02-12-2020-03-15.tif
        - 2020-03-16-2020-04-17.tif
        - 2020-04-18-2020-05-20.tif
        - 2020-05-21-2020-06-22.tif
        - 2020-06-23-2020-07-25.tif
      test: 
        - 2020-06-26-2020-07-28.tif
        - 2020-07-29-2020-08-30.tif
        - 2020-08-31-2020-10-02.tif
        - 2020-10-03-2020-11-04.tif
        - 2020-11-05-2020-12-07.tif
        - 2020-12-08-2021-01-09.tif
        - 2021-01-10-2021-02-10.tif
        - 2021-02-11-2021-03-14.tif
        - 2021-03-15-2021-04-15.tif
        - 2021-04-16-2021-05-17.tif
        - 2021-05-18-2021-06-18.tif
        - 2021-06-19-2021-07-20.tif

  prodes:
    folder: D:\Ferrari\Projects\thesis\prodes
    defor_2007: accumulated_deforestation_2007.shp
    hydrography: hydrography.shp
    no_forest: no_forest.shp
    residual: residual.shp
    yearly_deforestation: yearly_deforestation.shp
tiles_params:
  lines: 4
  columns: 4
  train_tiles: [1, 2, 4, 5, 7, 8, 9, 10, 13, 15]
  path: D:\Ferrari\Projects\thesis\data\general\tiles.tif
label_params:
  def_inner_buffer: 3
  def_outer_buffer: 3
  train_year: *train_year
  test_year: *test_year
  train_path: D:\Ferrari\Projects\thesis\data\general\label_train.tif
  test_path: D:\Ferrari\Projects\thesis\data\general\label_test.tif
previous_def_params:
  train_path: D:\Ferrari\Projects\thesis\data\general\previous_train.tif
  test_path: D:\Ferrari\Projects\thesis\data\general\previous_test.tif
  train_year: *train_year
  test_year: *test_year
preparation_params:
  folder: C:\Users\felferrari\Documents\projetos\thesis\prepared #D:\Ferrari\Projects\thesis\prepared_data
  train_folder: train
  #train_data: train.csv
  validation_folder: validation
  #validation_data: validation.csv
  test_folder: test
  prepared_data: prepared.yaml
  statistics_data: statistics.yaml
  patch_size: *patch_size
  opt_bands: *opt_bands 
  sar_bands: *sar_bands 
  patch_overlap: 0.7
  min_def_proportion: 0.02
  prefixs: *prefixs
training_params:
  n_models: *n_models
  experiments_cfg_path: *experiments_cfg_path
  experiments_paths: *experiments_path
  patch_size: *patch_size
  batch_size: 12
  opt_bands: *opt_bands 
  sar_bands: *sar_bands 
  max_train_batches: 200
  max_val_batches: 100
  min_val_loss: 0.7
  loss_fn: 
    module: torch.nn.CrossEntropyLoss #torch.nn.functional.cross_entropy
    ignore_index: 2
    weights: [0.15, 0.85, 0]
  optimizer:
    module: torch.optim.Adam
    params:
      lr: 2.0e-5
  early_stop:
    patience: 10
    min_delta: 1.0e-5
  max_epochs: 500
  n_classes: *n_classes
prediction_params:
  experiments_paths: *experiments_path
  patch_size: *patch_size
  n_classes: *n_classes
  prefixs: *prefixs
  n_models: *n_models
  batch_size: 12
  prediction_remove_border: 8
  prediction_overlaps: [0.2]#, 0.3, 0.4]
  opt_bands: *opt_bands 
  sar_bands: *sar_bands 
  #n_opt_images: *n_opt_images 
  #n_sar_images: *n_sar_images
#comet_params:
#  workspace_name: felferrari
#  project_name: test
#mlflow_params:
#  path: file:///D:\Ferrari\Projects\thesis\mlflow
#  exp_name: test


experiments:
  exp_X:
    model: models.resunet.networks.ResUnetOpt # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths


  exp_1:
    model: models.resunet.networks.ResUnetOpt # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 11] ]
    resunet_depths: *resunet_depths

  exp_2:
    model: models.resunet.networks.ResUnetSAR # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths

  exp_3:
    model: models.resunet.networks.ResUnetEF # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths

  exp_4:
    model: models.resunet.networks.ResUnetJF # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths

  exp_5:
    model: models.resunet.networks.ResUnetLF # ResUnetOpt ResUnetSAR ResUnetEF ResUnetJF ResUnetLF
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    resunet_depths: *resunet_depths

 
  exp_11:
    model: models.timm.networks.NetOpt 
    base_encoder: resnet18
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]

  exp_12:
    model: models.timm.networks.NetSAR
    base_encoder: resnet18
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]

  exp_13:
    model: models.timm.networks.NetEF 
    base_encoder: resnet18
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]

  exp_14:
    model: models.timm.networks.NetJF 
    base_encoder: resnet18
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]

  exp_15:
    model: models.timm.networks.NetLF 
    base_encoder: resnet18
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]

  exp_21:
    model: models.timm.networks.NetOpt 
    base_encoder: resnet50
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]

  exp_22:
    model: models.timm.networks.NetSAR
    base_encoder: resnet50
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]

  exp_23:
    model: models.timm.networks.NetEF 
    base_encoder: resnet50
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]

  exp_24:
    model: models.timm.networks.NetJF 
    base_encoder: resnet50
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]

  exp_25:
    model: models.timm.networks.NetLF 
    base_encoder: resnet50
    prefixs: *prefixs
    opt_bands: *opt_bands
    sar_bands: *sar_bands
    n_classes: *n_classes
    train_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    train_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]
    test_opt_imgs: [ [0, 3], [0, 4], [0, 5], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5] ]
    test_sar_imgs: [ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ]